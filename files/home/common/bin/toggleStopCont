#! /bin/bash
############
# toggleStopCont: sends the stop or cont signal to all processes whose name match the selected one
# arguments: <process id>, optional. If it is not given, the user will select a window with the mouse
# KDE: go to settings->shortcuts->custom shortcuts and add this script using the global ctrl-shift-alt-z key

processId=$1

# if no parameter is given, we'll interactively ask the user for one, using the mouse
if [ -z "$processId" ]; then
	processId=`xprop _NET_WM_PID | cut -d' ' -f3`
fi

executableName=`ls -l /proc/$processId/exe | sed 's|.*exe \-> ||' | sed 's|.*/||'`

# the following test command shows how to obtain the procress name 'pname', which may be used when invoking this script when a shortcut key is pressed on a window manager:
# pid=`xdotool getwindowfocus getwindowpid`; pname=`ls -l /proc/$pid/exe | sed 's|.*exe \-> ||' | sed 's|.*/||'`; echo "$pname: $pid"; ps aux | grep -i $pname; pgrep -f $pname | wc -l

if grep stopped /proc/$processId/status; then
	signal="-cont"
else
	signal="-stop"
fi

# for java applications, we'll signal just the pid; for the others, we'll signal the whole process family
if [ "${executableName}" == "java" ]; then
	kill ${signal} $processId
else
	pkill ${signal} -f ${executableName}
fi
