# This script was designed to be used only on systems that runs on SFS.
# Use this script to update both the RW partition and the SFS.
# On such systems, usually you'll have an fstab with the following entries:

# PARTUUID=c9080e60-01	/sfs	squashfs	defaults	0 0
# /sfs/usr                /usr	none		bind
# /sfs/opt                /opt	none		bind

# prepare to make changes on the RW partition
#############################################

mkdir -p /tmp/rwroot
mount --bind / /tmp/rwroot
mount -t proc proc /tmp/rwroot/proc
mount -t sysfs sys /tmp/rwroot/sys
mount -t devtmpfs dev /tmp/rwroot/dev

echo "###################################"
echo "# now on RW root. CTRL-D to leave #"
echo "###################################"
chroot /tmp/rwroot

# persist RW changes on an SFS file
###################################

nice -n 20 mksquashfs /tmp/rwroot/etc /tmp/rwroot/usr /tmp/rwroot/opt /updatedSFS.sfs -keep-as-directory -no-exports -always-use-fragments -noappend -no-recovery -progress -mem 2G -comp xz -b 1024k -Xbcj ia64 -Xdict-size 1024k

echo "#############################################################################################################"
echo "# updated SFS is now at /updatedSFS.sfs. Move it to /dev/sdb1 just before booting to use the updated system #"
echo "#############################################################################################################"
ls -l /updatedSFS.sfs
echo "Do it with these, after leaving the GUI and logging as root:"

cat <<END
cd /
umount -l opt usr sfs
date
sync
telinit 1
# after that, you'll be prompted for the root password. Execute these last commands
dd if=/updatedSFS.sfs of=/dev/disk/by-partuuid/c9080e60-01 bs=$((64*1024*1024)) status=progress
rm /updatedSFS.sfs
date
sync
shutdown -r now
END

umount /tmp/rwroot/proc
umount /tmp/rwroot/sys
umount /tmp/rwroot/dev
umount /tmp/rwroot
rmdir /tmp/rwroot
