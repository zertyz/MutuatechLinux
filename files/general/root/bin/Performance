#! /bin/bash

################### PRELUDE #####################
script_base_dir=`dirname "$0"`
script_base_name=`basename "$0"`

# Log all outputs
exec 1<&-
exec 2<&-
exec 1>>/tmp/mutuatechlinux.services.log
exec 2>&1

# load config variables
script_config_file="${script_base_dir}/config"
. ${script_config_file} || (echo "####### `date`: ERROR in script '${script_base_name}': could not load config '${script_config_file}'. ABORTING SCRIPT"; exit)

#################################################


echo "### `date`: 'Performance' script STARTED"

tlp ac

# system
sysctl --system &>/dev/null
echo 0 >/proc/sys/vm/laptop_mode
echo performance >/sys/module/pcie_aspm/parameters/policy

# io
find /sys -name '*link_power_management_policy*' | while read p; do echo 'max_performance' >"$p"; done

# cpu
for p in /sys/devices/system/cpu/cpu[0-9]*/power/energy_perf_bias; do echo 0 >"$p"; done
for p in /sys/devices/system/cpu/cpu[0-9]*/cpufreq/energy_performance_preference; do echo performance >"$p"; done	# deprecated?
for p in /sys/devices/system/cpu/cpufreq/policy*/energy_performance_preference; do echo performance >"$p"; done		# deprecated as well?
for p in /sys/devices/system/cpu/cpu[0-9]*/cpufreq/scaling_governor; do echo performance >"$p"; done
for p in /sys/devices/system/cpu/cpu[0-9]*; do
	CPU=`basename $p`;
	MAX=`cat /sys/devices/system/cpu/$CPU/cpufreq/cpuinfo_max_freq`;
	echo $MAX >/sys/devices/system/cpu/$CPU/cpufreq/scaling_max_freq;
done

# AMD gpus
for p in /sys/class/drm/card*/device/power_dpm_force_performance_level; do echo high >"$p"; done
for p in /sys/class/drm/card0/device/power_dpm_state; do echo performance >"$p"; done

local_script="${script_base_dir}/${script_base_name}.local"
echo -en "`date`: Running local script '${local_script}', if present..."
[ -s ${local_script} ] && . ${local_script} && echo " OK" || echo " NOT PRESENT"

echo "### `date`: 'Performance' script ENDED"
