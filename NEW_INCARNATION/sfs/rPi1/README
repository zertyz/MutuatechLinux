TO_EXCLUDE_ENTRIES=(
        /var/lib/{rpcbind,nfs,dhcpcd,transmission,mlocate,systemd}
        /var/cache/{minidlna,ldconfig,pacman/pkg/}
        /var/log
        /root/{.kodi,.new_kodi,.cargo}
        /etc/{ld.so.cache}
)

RELEASE_N=1     # 2020/03/20
RELEASE_N=2     # 2020/03/25
RELEASE_N=3     # 2020/03/28
RELEASE_N=4     # 2020/03/29
RELEASE_N=5     # 2020/04/14
RELEASE_N=6     # 2020/05/02
RELEASE_N=7     # 2020/05/21
RELEASE_N=8     # 2020/06/07
RELEASE_N=9     # 2020/06/25
RELEASE_N=10    # 2020/07/10
RELEASE_N=11    # 2020/07/27
RELEASE_N=12    # 2020/09/03
RELEASE_N=13    # 2020/09/15
RELEASE_N=14    # 2020/10/31
RELEASE_N=15    # 2020/11/01
RELEASE_N=16    # 2020/12/06
#RELEASE_N=17    # 2020/12/08	# failed attempt (kodi drop)
RELEASE_N=17    # 2021/06/29
RELEASE_N=18    # 2021/08/06
RELEASE_N=19    # 2021/10/04	# not fully working... /etc/mkinitcpio.conf/linux... .preset is not on the .sfs
RELEASE_N=20    # 2021/12/15	# backup from old version
RELEASE_N=21    # 2021/12/17	# old version just got updated & generated
RELEASE_N=22    # 2022/02/22	# last supported archlinuxarm.org version


touch start

# /boot
tar -cv /boot | xz -8evv >rPi1B_boot_r${RELEASE_N}.tar.xz
touch finish_boot

# generate the new sfs
(sleep 5; pid=`pgrep mksquashfs`; sudo chrt -i -p 0 $pid; sudo renice -n 20 $pid) &
block="1024k"; mksquashfs README /etc /root /opt /var /usr "./rPi1B_sfs_${block}_r${RELEASE_N}.sfs" -always-use-fragments -comp xz -Xbcj arm -b ${block} -Xdict-size ${block} -progress -ef <(for i in ${TO_EXCLUDE_ENTRIES[@]}; do echo $i; done) # 2>&1 | tee mksquashfs_root.out
touch finish_sfs

# temporarily backup /
umount -l /tmp/root
mkdir -p /tmp/root
mount --bind / /tmp/root
tar -cv -C /tmp/root etc/ data/ home/ rw/root/ | xz -7vv >black.pi.root_r${RELEASE_N}.tar.xz
#mksquashfs /tmp/root "./black.pi.root_r${RELEASE_N}.sfs" -always-use-fragments -comp xz -Xbcj arm -b ${block} -Xdict-size ${block} -progress -ef <(echo -en "/tmp/root/sfs\n/sfs\n")
touch finish_root
umount /tmp/root

ln -f rPi1B_sfs_${block}_r${RELEASE_N}.sfs rPi1B_sfs_r${RELEASE_N}.sfs
ls -l

# publish
rsync -Pa --inplace README rPi1B_boot_r${RELEASE_N}.tar.xz rPi1B_sfs_r${RELEASE_N}.sfs black.pi.root_r${RELEASE_N}.* mutuatec@mutuatech.com:/home/mutuatec/mutuatech.com/linux/download
touch finish_rsync

return || exit 0

# on the first setup,

mkdir -p /rw/{etc,opt,usr,root,var}
mkdir -p /work/{etc,opt,usr,root,var}
mkdir -p /sfs/{etc,opt,usr,root,var}

: /etc/fstab.initcpio.script 
#!/usr/bin/ash

msg "waiting a little so devices needed to boot may have the time to turn up and be recognized by initramfs' udev before fstab is processed"
sleep 5
msg "done waiting. Devices should have already been recognized and we (may) be able to boot. If this is not the case, increase the sleep time"


: /etc/fstab.initcpio
# keep this file in sync with /rw/etc/fstab

# SFS mount points that will be rewritable
/new_root/sfs/sfs.sfs                           /new_root/sfs/        squashfs    defaults                               0       2
/dev/mmcblk0p1                                  /new_root/boot        vfat        defaults                               0       2

# overlays to allow writable SFSes
overlay                                         /new_root/usr            overlay         x-systemd.requires=/new_root/sfs/sfs.sfs,upperdir=/new_root/rw/usr,lowerdir=/new_root/sfs/usr,workdir=/new_root/work/usr 0 0
overlay                                         /new_root/opt            overlay         x-systemd.requires=/new_root/sfs/sfs.sfs,upperdir=/new_root/rw/opt,lowerdir=/new_root/sfs/opt,workdir=/new_root/work/opt 0 0
overlay                                         /new_root/var            overlay         x-systemd.requires=/new_root/sfs/sfs.sfs,upperdir=/new_root/rw/var,lowerdir=/new_root/sfs/var,workdir=/new_root/work/var 0 0
overlay                                         /new_root/etc            overlay         x-systemd.requires=/new_root/sfs/sfs.sfs,upperdir=/new_root/rw/etc,lowerdir=/new_root/sfs/etc,workdir=/new_root/work/etc 0 0
overlay                                         /new_root/root           overlay         x-systemd.requires=/new_root/sfs/sfs.sfs,upperdir=/new_root/rw/root,lowerdir=/new_root/sfs/root,workdir=/new_root/work/root 0 0

